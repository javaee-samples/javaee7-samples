<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>org.javaee7</groupId>
    <artifactId>samples-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    
    <name>Java EE 7 Sample: javaee7-samples</name>

    <properties>
        <arquillian.version>1.7.0.Alpha1</arquillian.version>
        <java.min.version>1.7</java.min.version>
        <maven.min.version>3.5.4</maven.min.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <maven.test.skip>false</maven.test.skip>
        <skipTests>false</skipTests>
        
        <skipEJB>${skipTests}</skipEJB>
        <skipCDI>${skipTests}</skipCDI>
        <skipJSF>${skipTests}</skipJSF>
        <skipJACC>${skipTests}</skipJACC>
        <skipJMS>${skipTests}</skipJMS>
        <skipJAXWS>${skipTests}</skipJAXWS>
        <skipEAR>${skipTests}</skipEAR>
        
        <skipServletClientCertificate>${skipTests}</skipServletClientCertificate>
        
        <!-- 
            Application Server versions 
            (these are downloaded and installed in these versions by Maven for the CI profiles)
         -->
        <payara.version>4.1.2.181</payara.version>
        <payara_domain>payaradomain</payara_domain>
        <glassfish.client.version>5.0</glassfish.client.version> <!-- For remote EJB for Payara and Glassfish -->
        <glassfish.version>4.1.1</glassfish.version>
        <liberty.version>16.0.0.4</liberty.version>
        <wildfly.version>13.0.0.Final</wildfly.version>
        <wildfly.swarm.version>2.4.0.Final</wildfly.swarm.version>
        <tomee.version>7.0.2</tomee.version>
        <tomcat.version>9.0.4</tomcat.version>
    </properties>
    
    <prerequisites>
        <maven>${maven.min.version}</maven>
    </prerequisites>
    
    <repositories>
        <repository>
            <id>central</id>
            <name>Central Repository</name>
            
            <url>https://repo.maven.apache.org/maven2</url>
            
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>payara-milestones</id>
            <name>Payara Milestones</name>
            
            <url>https://raw.github.com/payara/Payara_PatchedProjects/master</url>
            
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>


    <!-- The Java EE 7 specs that this project is providing samples for.
         Each spec is represented by one module. "test-utils" and "util"
         are helper modules.
     -->
    <modules>
        <module>test-utils</module>
        <module>batch</module>
        <module>cdi</module>
        <module>concurrency</module>
        <module>ejb</module>
        <module>el</module>
        <module>interceptor</module>
        <module>javamail</module>
        <module>jaspic</module>
        <module>jacc</module>
        <module>jaxrs</module>
        <module>jaxws</module>
        <module>jca</module>
        <module>jms</module>
        <module>jpa</module>
        <module>jta</module>
        <module>jsf</module>
        <module>json</module>
        <module>servlet</module>
        <module>validation</module>
        <module>websocket</module>
    </modules>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.container</groupId>
                <artifactId>arquillian-container-test-api</artifactId>
                <version>${arquillian.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.197</version>
            </dependency>
            <dependency>
                <groupId>fish.payara.arquillian</groupId>
                <artifactId>payara-client-ee7</artifactId>
                <version>2.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>1.61</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>1.61</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
    
        <!-- The Java EE 7 API, which is the main and only API which this project is
             providing samples for.
         -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies which can be used in sub-modules -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Alternative to Hamcrest matchers. Provides fluent, type-aware API -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.16.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven-archive</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.5.0</version>
            <scope>test</scope>
        </dependency>
        <!-- TODO: remove this dependency, only htmlunit should be needed -->
        <dependency>
            <groupId>httpunit</groupId>
            <artifactId>httpunit</artifactId>
            <version>1.7</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
            <version>2.40.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>rhino</groupId>
            <artifactId>js</artifactId>
            <version>1.7R2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180813</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>1.7.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.omnifaces</groupId>
            <artifactId>omniutils</artifactId>
            <version>0.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>3.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>3.0.0</version>
        </dependency>
    </dependencies>


    <build>
        <finalName>${project.artifactId}</finalName>
        
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.min.version}</source>
                    <target>${java.min.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <attachClasses>true</attachClasses>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <rules>
                        <requireMavenVersion>
                            <message>At least Maven in version ${maven.min.version} is
                                required.</message>
                            <version>${maven.min.version}</version>
                        </requireMavenVersion>
                        <requireJavaVersion>
                            <message>At least a JDK in version ${java.min.version} is
                                required.</message>
                            <version>${java.min.version}</version>
                        </requireJavaVersion>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>1.2.1.Final</version>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M4</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    
    
    
    <!-- Profiles for the application servers against which the samples are run -->
    

    <profiles>
    
        <!-- ### PIRANHA ### -->
    
        <profile>
            <id>piranha-embedded-micro</id>
    
            <properties> 
                <skipEJB>true</skipEJB>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>

            <dependencies>
                 <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee7</artifactId>
                </dependency>
              
                <dependency>
                     <groupId>cloud.piranha.arquillian</groupId>
                     <artifactId>piranha-arquillian-server</artifactId>
                     <version>20.6.0-SNAPSHOT</version>
                </dependency>
            </dependencies>
            
             <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <javaEEServer>piranha-embedded</javaEEServer>
                                <piranha.version>20.6.0-SNAPSHOT</piranha.version>
                                <piranha.offline>true</piranha.offline>
                                <skipEJB>${skipEJB}</skipEJB>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            
        </profile>
    
    
        
        <!-- ###  PAYARA  ### -->
        
        
        <profile>
            <id>payara-ci-managed</id>
            
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            
            <dependencies>
                 <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee7</artifactId>
                </dependency>

                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-4-managed</artifactId>
                    <version>1.1</version>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
                                    <markersDirectory>${session.executionRootDirectory}/target/dependency-maven-plugin-markers</markersDirectory>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.distributions</groupId>
                                            <artifactId>payara</artifactId>
                                            <version>${payara.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${session.executionRootDirectory}/target</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <GLASSFISH_HOME>${session.executionRootDirectory}/target/payara41</GLASSFISH_HOME>
                            </environmentVariables>
                            <!-- This needs tuning -->
                            <systemPropertyVariables>
                                <glassfishRemote_gfHome>${session.executionRootDirectory}/target/payara41</glassfishRemote_gfHome>
                                <javaEEServer>payara-remote</javaEEServer>
                                <payara_domain>${payara_domain}</payara_domain>
                                <arquillian.launch>payara</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>payara-micro-managed</id>

            <properties>
                <!-- JMS and JAXWS not supported by Micro -->
                <skipJMS>true</skipJMS>
                <skipJAXWS>true</skipJAXWS>
                
                <!-- Being a WebProfile++, Micro does not support ear archives -->
                <skipEAR>true</skipEAR>
                
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>

            <dependencies>
                <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee7</artifactId>
                </dependency>
            
                <!-- The Arquillian connector -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-micro-5-managed</artifactId> 
                    <version>1.0.Beta3</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!-- Download Payara Micro and copy to target directory -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>fish.payara.extras</groupId>
                                            <artifactId>payara-micro</artifactId>
                                            <version>${payara.version}</version>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${session.executionRootDirectory}/target/</outputDirectory>
                                            <destFileName>payara-micro-${payara.version}.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Configure Payara Micro Runtime -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <skipEAR>${skipEAR}</skipEAR>
                                <payara.microJar>${session.executionRootDirectory}/target/payara-micro-${payara.version}.jar</payara.microJar>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>payara-embedded</id>
            
             <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <dependencies>
                <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                        <artifactId>payara-client-ee7</artifactId>
                </dependency>
                
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
                    <version>1.0.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-embedded</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>
        
        <profile>
            <id>payara-remote</id>
            
            <dependencies>
                <!-- Java EE based client dependencies to contact a server via WebSocket or REST -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>payara-client-ee7</artifactId>
                </dependency>
                
                <!-- The actual Arquillian connector -->
                <dependency>
                    <groupId>fish.payara.arquillian</groupId>
                    <artifactId>arquillian-payara-server-4-remote</artifactId> 
                    <version>1.0.Beta3-m1</version> 
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <javaEEServer>payara-remote</javaEEServer>
                                <payara_domain>${payara_domain}</payara_domain>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-remote</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>
        
        
        
        <!-- ###  GLASSFISH  ### -->
        
        <profile>
            <id>glassfish-embedded</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.main.extras</groupId>
                    <artifactId>glassfish-embedded-all</artifactId>
                    <version>${glassfish.version}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.json</artifactId>
                    <version>1.0.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-client</artifactId>
                    <version>1.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-container-grizzly-client</artifactId>
                    <version>1.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>2.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
                    <version>1.0.0.CR4</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-embedded</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>
        
        <profile>
            <id>glassfish-remote</id>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish</groupId>
                    <artifactId>javax.json</artifactId>
                    <version>1.0.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-client</artifactId>
                    <version>1.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.tyrus</groupId>
                    <artifactId>tyrus-container-grizzly-client</artifactId>
                    <version>1.3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>2.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-jackson</artifactId>
                    <version>2.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-processing</artifactId>
                    <version>2.4</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-remote-3.1</artifactId>
                    <version>1.0.0.CR4</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                 <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <javaEEServer>glassfish-remote</javaEEServer>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                   </plugins>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-remote</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>

        
        
        <!-- ###  JBOSS / WILDFLY  ### -->
    
        <profile>
            <id>wildfly-embedded</id>
            
            <properties>
                <serverProfile>standalone-full.xml</serverProfile>
                <serverRoot>${project.build.directory}/wildfly-${wildfly.version}</serverRoot>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            <dependencies>
                <!-- Needed for websocket tests that use ContainerProvider.getWebSocketContainer() 
                     to connect from a the client to the websocket server.
                -->
                <dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>1.4.0.Final</version>
                    <scope>test</scope>
                </dependency>
            
                <!-- Needed for jaxrs tests that use ClientBuilder to connect from a client
                     to the JAX-RS server.
                -->
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                
                <!-- Without this exception will be thrown about missing tracef method -->
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                    <version>3.3.0.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-p-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
            
                <!-- The actual Arquillian container (server connector) -->
                <!-- 
                    Note, this is not a true embedded container, as it still needs a separately installed
                    JBoss/Wildfly. The difference with wildfly-arquillian-container-managed is that this runs
                    within the same process/jvm as where the tests run.
                -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-embedded</artifactId>
                    <version>2.0.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-wildfly-embedded</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                <arquillian.launch>wildfly</arquillian.launch>
                            </systemPropertyVariables>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-${wildfly.version}</JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>wildfly-ci-managed</id>
            
            <properties>
                <serverProfile>standalone-full.xml</serverProfile>
                <serverRoot>${project.build.directory}/wildfly-${wildfly.version}</serverRoot>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <dependencies>
                <!-- Needed for websocket tests that use ContainerProvider.getWebSocketContainer() 
                     to connect from a the client to the websocket server.
                -->
                <dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>1.4.0.Final</version>
                    <scope>test</scope>
                </dependency>
            
                <!-- Needed for jaxrs tests that use ClientBuilder to connect from a client
                     to the JAX-RS server.
                -->
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                
                <!-- Without this exception will be thrown about missing tracef method -->
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                    <version>3.3.0.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-p-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                
                <!-- The actual Arquillian container (server connector) -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>2.0.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-wildfly-managed</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <skip>${maven.test.skip}</skip>
                        </configuration>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.wildfly</groupId>
                                            <artifactId>wildfly-dist</artifactId>
                                            <version>${wildfly.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <environmentVariables>
                                <JBOSS_HOME>${project.build.directory}/wildfly-${wildfly.version}</JBOSS_HOME>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <arquillian.launch>wildfly</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>wildfly-remote</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <dependencies>
                <!-- Needed for websocket tests that use ContainerProvider.getWebSocketContainer() 
                     to connect from a the client to the websocket server.
                -->
                <dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>1.4.0.Final</version>
                    <scope>test</scope>
                </dependency>
            
                <!-- Needed for jaxrs tests that use ClientBuilder to connect from a client
                     to the JAX-RS server.
                -->
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                
                <!-- Without this exception will be thrown about missing tracef method -->
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                    <version>3.3.0.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-p-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                
                <!-- The actual Arquillian container (server connector) -->
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-remote</artifactId>
                    <version>2.0.0.Final</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-wildfly-remote</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
            </build>
        </profile>        
                 
        <profile>
            <id>wildfly-swarm</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>

            <dependencies>
                <!-- Needed for websocket tests that use ContainerProvider.getWebSocketContainer()
                     to connect from a the client to the websocket server.
                -->
                <dependency>
                    <groupId>io.undertow</groupId>
                    <artifactId>undertow-websockets-jsr</artifactId>
                    <version>1.4.0.Final</version>
                    <scope>test</scope>
                </dependency>

                <!-- Needed for jaxrs tests that use ClientBuilder to connect from a client
                     to the JAX-RS server.
                -->
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-client</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>

                <!-- Without this exception will be thrown about missing tracef method -->
                <dependency>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                    <version>3.3.0.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-jaxb-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>resteasy-json-p-provider</artifactId>
                    <version>3.0.19.Final</version>
                    <scope>test</scope>
                </dependency>

                <!-- The actual Arquillian container -->
                <dependency>
                    <groupId>io.thorntail</groupId>
                    <artifactId>arquillian</artifactId>
                    <version>${wildfly.swarm.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                        <filtering>true</filtering>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-wildfly-swarm</directory>
                        <filtering>true</filtering>
                    </testResource>
                </testResources>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.xml>arquillian-swarm.xml</arquillian.xml>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        
        
        <!-- ###  TOMEE  ### -->
        
        <profile>
            <id>tomee-embedded</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            
            <dependencies>
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>arquillian-tomee-embedded</artifactId>
                    <version>${tomee.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>tomee-embedded</artifactId>
                    <version>${tomee.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>tomee-webservices</artifactId>
                    <version>${tomee.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.batchee</groupId>
                    <artifactId>batchee-jbatch</artifactId>
                    <version>0.3-incubating</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.johnzon</groupId>
                    <artifactId>johnzon-core</artifactId>
                    <version>0.9.3-incubating</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-el-api</artifactId>
                    <version>8.5.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jasper-el</artifactId>
                    <version>8.5.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                    <version>3.3.2</version>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <javax.el.ExpressionFactory>org.apache.el.ExpressionFactoryImpl</javax.el.ExpressionFactory>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>tomee-ci-managed</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <repositories>
                <repository>
                    <id>apache.snapshots</id> 
                    <url>https://repository.apache.org/content/repositories/snapshots/</url> 
                    <releases> 
                        <enabled>false</enabled> 
                    </releases> 
                    <snapshots> 
                        <enabled>true</enabled> 
                    </snapshots> 
                </repository> 
            </repositories>
            
            <dependencies>
                
                <!-- The arquillian "remote" adapter that installs and starts/stops TomEE and deploys/undeploys tests  -->
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>arquillian-tomee-remote</artifactId>
                    <version>${tomee.version}</version>
                    <exclusions>
                        <exclusion> <!-- let's use default (JTA) otherwise we need to setup the pom in a harder way -->
                            <groupId>org.apache.tomee</groupId>
                            <artifactId>arquillian-openejb-transaction-provider</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                
                <!-- The version of TomEE that the "remote" adapter is going to install and use.
                     Note that the adapter does *not* connect to an existing user installed TomEE
                     instance.
                 -->
                <dependency>
                    <groupId>org.apache.tomee</groupId>
                    <artifactId>apache-tomee</artifactId>
                    <version>${tomee.version}</version>
                    <type>zip</type>
                    <classifier>plus</classifier>
                </dependency>
                
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.4.191</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-rs-client</artifactId>
                    <version>3.1.5</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>-DTOMEE_LOCK_FILE=${user.dir}/.tomee-ports.lock</argLine>
                            <systemPropertyVariables>
                                
                                <!--
                                    TomEE Remote Arquillian Adapter Configuration
                                    
                                    The TomEE adapter can be directly configured via system properties
                                    without requiring to shuffle these to the arquillian.xml file.
                                -->

                                <!-- Using random port to run in // tests -->
                                <tomee.stopPort>-1</tomee.stopPort>
                                <tomee.httpPort>-1</tomee.httpPort>
                                <tomee.httpsPort>-1</tomee.httpsPort>
                                <tomee.ajpPort>-1</tomee.ajpPort>
                                
                                <!-- Configure arquillian adapter here to do it once without any other module -->
                                <tomee.dir>target/tomee/server</tomee.dir>
                                <tomee.appWorkingDir>target/tomee/arquillian</tomee.appWorkingDir>
                                <tomee.cleanOnStartUp>true</tomee.cleanOnStartUp>
                                <tomee.classifier>plus</tomee.classifier>
                                <tomee.properties>
                                    # default resources are not on by default cause it can need ports etc (JMS)
                                    openejb.environment.default=true

                                    # see additionalLibs
                                    javax.persistence.provider = org.eclipse.persistence.jpa.PersistenceProvider
                                </tomee.properties>
                                <tomee.additionalLibs>
                                    # OpenJPA is not yet JPA 2.1 and a lot of test - not only JPA - rely on javax.persistence properties
                                    remove:openjpa
                                    mvn:org.eclipse.persistence:eclipselink:2.5.2
                                    mvn:org.eclipse.persistence:commonj.sdo:2.1.1
                                    # some tests rely on h2 presence so ensure it is there even if tomee default is hsqldb
                                    mvn:com.h2database:h2:1.4.191
                                </tomee.additionalLibs>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <!-- ###  LIBERTY  ### -->

        <profile>
            <id>liberty-managed</id> <!-- Can also be used as remote -->
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <dependencies>
                <dependency>
                   <groupId>org.jboss.arquillian.container</groupId>
                   <artifactId>arquillian-wlp-managed-8.5</artifactId>
                   <version>1.0.0.Beta2</version>
                </dependency>        
                <dependency>
                   <groupId>org.glassfish.tyrus</groupId>
                   <artifactId>tyrus-client</artifactId>
                   <version>1.3</version>
                   <scope>test</scope>
                </dependency>        
                <dependency>
                   <groupId>org.glassfish</groupId>
                   <artifactId>javax.json</artifactId>
                   <version>1.0.4</version>
                   <scope>test</scope>
                </dependency>            
                <dependency>
                   <groupId>org.glassfish.tyrus</groupId>
                   <artifactId>tyrus-container-grizzly-client</artifactId>
                   <version>1.3</version>
                   <scope>test</scope>
                </dependency>
                <dependency>
                   <groupId>org.glassfish.jersey.core</groupId>
                   <artifactId>jersey-client</artifactId>
                   <version>2.4</version>
                   <scope>test</scope>
                </dependency>
                <dependency>
                   <groupId>org.glassfish.jersey.media</groupId>
                   <artifactId>jersey-media-json-processing</artifactId>
                   <version>2.4</version>
                   <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>liberty-managed</arquillian.launch>
                                <useEarForJaspic>true</useEarForJaspic>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        
        <profile>
            <id>liberty-ci-managed</id>
            
            <properties>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-wlp-managed-8.5</artifactId>
                    <version>1.0.0.Beta2</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>com.ibm.websphere.appserver.runtime</groupId>
                                            <artifactId>wlp-javaee7</artifactId>
                                            <version>${liberty.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <!-- TODO: There has to be a better way. Look at
                                             PR for Liberty arquillian container to modify server.xml?
                                         -->
                                        <echo>Copying server.xml</echo>
                                        <copy
                                            failonerror="false"
                                            file="../../test-utils/src/main/resources/server.xml"
                                            tofile="${project.build.directory}/wlp/templates/servers/defaultServer/server.xml"
                                        />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>liberty-ci-managed</arquillian.launch>
                                <arquillian.liberty.wlpHome>${project.build.directory}/wlp</arquillian.liberty.wlpHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        
        
        <!-- ###  WEBLOGIC  ### -->
        
        <profile>
            <id>weblogic-remote</id>
        
            <properties>
                <!-- Default username/password that instructions in README.md ask to use 
                    when starting up WebLogic for the first time. Note that WebLogic does not 
                    have any default username/password of its own. -->
                <weblogicRemoteArquillian_adminUserName>admin</weblogicRemoteArquillian_adminUserName>
                <weblogicRemoteArquillian_adminPassword>admin007</weblogicRemoteArquillian_adminPassword>
        
                <!-- Default host and port when running WLS locally -->
                <weblogicRemoteArquillian_adminUrl>t3://localhost:7001</weblogicRemoteArquillian_adminUrl>
        
                <!-- Default target after having installed developer zip distribution for 
                    WebLogic -->
                <weblogicRemoteArquillian_target>myserver</weblogicRemoteArquillian_target>
                
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-wls-remote-12.1.2</artifactId>
                    <version>1.0.0.Alpha3</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>weblogic-remote</arquillian.launch>
                                <wlHome>${weblogicRemoteArquillian_wlHome}</wlHome>
                                <adminUrl>${weblogicRemoteArquillian_adminUrl}</adminUrl>
                                <adminUserName>${weblogicRemoteArquillian_adminUserName}</adminUserName>
                                <adminPassword>${weblogicRemoteArquillian_adminPassword}</adminPassword>
                                <target>${weblogicRemoteArquillian_target}</target>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <!-- ###  TOMCAT  ### -->

        <profile>
            <id>tomcat-remote</id>
    
            <properties> 
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties> 
    
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-remote-7</artifactId>
                    <version>1.0.0.CR7</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-remote</arquillian.launch>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>


        <profile>
            <id>tomcat-ci-managed</id>

            <properties> 
                <skipEJB>true</skipEJB>
                <skipCDI>true</skipCDI>
                <skipJSF>true</skipJSF>
                <skipJACC>true</skipJACC>
                <!-- Client-cert needs complicated cert setup, which hasn't been done -->
                <skipServletClientCertificate>true</skipServletClientCertificate>
            </properties>
            
            <repositories>
                <!-- Released versions of Tomcat -->
                <repository>
                    <id>apache.public</id> 
                    <url>https://repository.apache.org/content/repositories/public/</url> 
                    <releases> 
                        <enabled>true</enabled> 
                    </releases> 
                    <snapshots> 
                        <enabled>false</enabled> 
                    </snapshots> 
                </repository>
                
                <!-- About to be released version of Tomcat -->
                <repository>
                    <id>apache.staging</id> 
                    <url>https://repository.apache.org/content/repositories/staging/</url> 
                    <releases> 
                        <enabled>true</enabled> 
                    </releases> 
                    <snapshots> 
                        <enabled>false</enabled> 
                    </snapshots> 
                </repository> 
            </repositories>

            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-tomcat-managed-7</artifactId>
                    <version>1.0.0.CR7</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.apache.tomcat</groupId>
                                            <artifactId>tomcat</artifactId>
                                            <version>${tomcat.version}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo>Copying server.xml</echo>
                                        <copy
                                            failonerror="false"
                                            file="../../test-utils/src/main/resources/tomcat-users.xml"
                                            tofile="${project.build.directory}/apache-tomcat-${tomcat.version}/conf/tomcat-users.xml"
                                        />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>tomcat-ci-managed</arquillian.launch>
                                <arquillian.tomcat.catalinaHome>${project.build.directory}/apache-tomcat-${tomcat.version}</arquillian.tomcat.catalinaHome>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>



        <!-- 
            Activate this profile to download javadoc and sources jars. run: 
            mvn process-resources -Ddownload Notice: This feature has been removed with 
            plugin version 2.5, so keep this plugin configuration in a profile section. 
        -->
        <profile>
            <id>javadocs</id>
            <activation>
                <property>
                    <name>javadocs</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.2</version>
                        <executions>
                            <execution>
                                <id>sources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>sources</goal>
                                    <goal>resolve</goal>
                                </goals>
                                <configuration>
                                    <classifier>javadoc</classifier>
                                    <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <aggregate>true</aggregate>
                    <linkXRef>true</linkXRef>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

</project>

